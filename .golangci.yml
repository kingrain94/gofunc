# golangci-lint configuration for GoFunc
# See https://golangci-lint.run/usage/configuration/ for details

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - examples
  skip-files:
    - ".*_test.go"
  modules-download-mode: readonly

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  exhaustive:
    default-signifies-exhaustive: false

  funlen:
    lines: 100
    statements: 50

  gocognit:
    min-complexity: 15

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    capital: true

  gofmt:
    simplify: true

  goimports:
    local-prefixes: github.com/kingrain94/gofunc

  golint:
    min-confidence: 0

  gomnd:
    settings:
      mnd:
        checks: [argument, case, condition, operation, return, assign]

  govet:
    check-shadowing: true
    enable:
      - atomicalign
      - deepequalerrors
      - fieldalignment
      - findcall
      - nilness
      - reflectvaluecompare
      - shadow
      - sortslice
      - timeformat
      - unusedwrite

  lll:
    line-length: 120

  maligned:
    suggest-new: true

  misspell:
    locale: US

  nakedret:
    max-func-lines: 30

  prealloc:
    simple: true
    range-loops: true
    for-loops: false

  revive:
    min-confidence: 0
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf

  staticcheck:
    go: "1.20"
    checks: ["all"]

  stylecheck:
    go: "1.20"
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]

  unparam:
    check-exported: false

  unused:
    go: "1.20"

  whitespace:
    multi-if: false
    multi-func: false

linters:
  disable-all: true
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - gofmt
    - goimports
    - misspell
    - revive
    - gosec
    - gocritic
    - gocyclo
    - funlen
    - lll

issues:
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gocognit
        - scopelint
        - lll

    # Exclude known linters from partially hard-to-fix issues
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude shadow warnings for common variable names
    - linters:
        - govet
      text: 'shadow: declaration of "(err|ctx)" shadows declaration at'

    # Exclude staticcheck warnings for deprecated functions if they're still needed
    - linters:
        - staticcheck
      text: "SA1019:"

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  new: false

  # Fix found issues (if it's supported by the linter)
  fix: false

  # Exclude some common false positives
  exclude:
    - "Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print.*|os\.(Un)?Setenv). is not checked"
    - "exported (type|method|function) .* should have comment or be unexported"
    - "ST1000: at least one file in a package should have a package comment"
